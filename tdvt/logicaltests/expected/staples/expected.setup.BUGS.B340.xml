<?xml version='1.0' encoding='utf-8' ?>

<results>
  <test name='D:\dev\data-dev\tableau-tests\tdvt\logicaltests/staples\setup.BUGS.B340.postgres91.xml'>
    <sql>
      SELECT &quot;Staples&quot;.&quot;Call Center Region&quot; AS &quot;Call Center Region&quot;,&#10;  &quot;Staples&quot;.&quot;Customer Name&quot; AS &quot;Customer Name&quot;,&#10;  SUM(&quot;Staples&quot;.&quot;Customer Balance&quot;) AS &quot;sum:Customer Balance:ok&quot;&#10;FROM &quot;Staples&quot;&#10;  INNER JOIN (&#10;  SELECT &quot;Staples&quot;.&quot;Customer Name&quot; AS &quot;Customer Name&quot;,&#10;    MIN(1) AS &quot;_Tableau_join_flag&quot;,&#10;    SUM(&quot;Staples&quot;.&quot;Customer Balance&quot;) AS &quot;$__alias__0&quot;&#10;  FROM &quot;Staples&quot;&#10;  GROUP BY 1&#10;  ORDER BY 3 DESC NULLS LAST&#10;  LIMIT 10&#10;) &quot;t0&quot; ON (&quot;Staples&quot;.&quot;Customer Name&quot; = &quot;t0&quot;.&quot;Customer Name&quot;)&#10;GROUP BY 1,&#10;  2&#10;HAVING ((SUM(&quot;Staples&quot;.&quot;Customer Balance&quot;) &gt;= 999999.99999998999) AND (SUM(&quot;Staples&quot;.&quot;Customer Balance&quot;) &lt;= 3186976.0000000317))
    </sql>
    <table>
      <schema>
        <column>[Staples.postgres91].[Call Center Region]</column>
        <column>[Staples.postgres91].[Customer Name]</column>
        <column>[Staples.postgres91].[sum:Customer Balance:ok]</column>
      </schema>
      <tuple>
        <value>&quot;CENTRAL&quot;</value>
        <value>&quot;Hilary Holden&quot;</value>
        <value>1093948.0</value>
      </tuple>
      <tuple>
        <value>&quot;CENTRAL&quot;</value>
        <value>&quot;Roy Skaria&quot;</value>
        <value>1229581.0</value>
      </tuple>
      <tuple>
        <value>&quot;CENTRAL&quot;</value>
        <value>&quot;Zyzzy Zzuyzyzyk&quot;</value>
        <value>1132594.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Jasper Cacioppo&quot;</value>
        <value>2049341.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Jesus Ocampo&quot;</value>
        <value>3078497.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Karen Seio&quot;</value>
        <value>3098324.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Lena Cacioppo&quot;</value>
        <value>3028281.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Lynn Smith-Reed&quot;</value>
        <value>2415802.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Naresj Patel&quot;</value>
        <value>1892464.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Roy Skaria&quot;</value>
        <value>2805333.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Thomas Seio&quot;</value>
        <value>2848296.0</value>
      </tuple>
      <tuple>
        <value>&quot;EAST&quot;</value>
        <value>&quot;Zyzzy Zzuyzyzyk&quot;</value>
        <value>3186975.0</value>
      </tuple>
      <tuple>
        <value>&quot;WEST&quot;</value>
        <value>&quot;Hilary Holden&quot;</value>
        <value>2274940.0</value>
      </tuple>
      <tuple>
        <value>&quot;WEST&quot;</value>
        <value>&quot;Karen Seio&quot;</value>
        <value>1707447.0</value>
      </tuple>
      <tuple>
        <value>&quot;WEST&quot;</value>
        <value>&quot;Lynn Smith-Reed&quot;</value>
        <value>1534576.0</value>
      </tuple>
      <tuple>
        <value>&quot;WEST&quot;</value>
        <value>&quot;Naresj Patel&quot;</value>
        <value>2431303.0</value>
      </tuple>
    </table>
  </test>
</results>
