<?xml version='1.0' encoding='utf-8' ?>

<results>
  <test name='e:\dev\near\tableau-tests\tdvt\tests\logical/setup/bigquery\setup.join.null.bool.TEST_db2.xml'>
    <sql>
      SELECT &quot;t0&quot;.&quot;__measure__0&quot; AS &quot;Calculation_845269395859349504&quot;,&#10;  &quot;Calcs&quot;.&quot;bool1_&quot; AS &quot;bool1_&quot;,&#10;  SUM(&quot;Calcs&quot;.&quot;num1&quot;) AS &quot;sum:num1:ok&quot;&#10;FROM &quot;TEST&quot;.&quot;Calcs&quot; &quot;Calcs&quot;&#10;  INNER JOIN (&#10;  SELECT &quot;Calcs&quot;.&quot;bool1_&quot; AS &quot;bool1_&quot;,&#10;    &quot;Calcs&quot;.&quot;key&quot; AS &quot;key&quot;,&#10;    SUM(&quot;Calcs&quot;.&quot;num1&quot;) AS &quot;__measure__0&quot;&#10;  FROM &quot;TEST&quot;.&quot;Calcs&quot; &quot;Calcs&quot;&#10;  GROUP BY &quot;Calcs&quot;.&quot;bool1_&quot;,&#10;    &quot;Calcs&quot;.&quot;key&quot;&#10;) &quot;t0&quot; ON (((&quot;Calcs&quot;.&quot;bool1_&quot; = &quot;t0&quot;.&quot;bool1_&quot;) OR ((&quot;Calcs&quot;.&quot;bool1_&quot; IS NULL) AND (&quot;t0&quot;.&quot;bool1_&quot; IS NULL))) AND ((&quot;Calcs&quot;.&quot;key&quot; = &quot;t0&quot;.&quot;key&quot;) OR ((&quot;Calcs&quot;.&quot;key&quot; IS NULL) AND (&quot;t0&quot;.&quot;key&quot; IS NULL))))&#10;GROUP BY &quot;t0&quot;.&quot;__measure__0&quot;,&#10;  &quot;Calcs&quot;.&quot;bool1_&quot;
    </sql>
    <query-time>
      94.000
    </query-time>
    <table>
      <schema>
        <column>[cast_calcs.db2].[Calculation_845269395859349504]</column>
        <column>[cast_calcs.db2].[bool1_]</column>
        <column>[cast_calcs.db2].[sum:num1:ok]</column>
      </schema>
      <tuple>
        <value>2.47</value>
        <value>1</value>
        <value>2.47</value>
      </tuple>
      <tuple>
        <value>6.71</value>
        <value>1</value>
        <value>6.71</value>
      </tuple>
      <tuple>
        <value>7.1</value>
        <value>0</value>
        <value>7.1</value>
      </tuple>
      <tuple>
        <value>7.12</value>
        <value>%null%</value>
        <value>7.12</value>
      </tuple>
      <tuple>
        <value>7.43</value>
        <value>0</value>
        <value>7.43</value>
      </tuple>
      <tuple>
        <value>8.42</value>
        <value>1</value>
        <value>8.42</value>
      </tuple>
      <tuple>
        <value>9.05</value>
        <value>0</value>
        <value>9.05</value>
      </tuple>
      <tuple>
        <value>9.38</value>
        <value>0</value>
        <value>9.38</value>
      </tuple>
      <tuple>
        <value>9.47</value>
        <value>%null%</value>
        <value>9.47</value>
      </tuple>
      <tuple>
        <value>9.78</value>
        <value>1</value>
        <value>9.78</value>
      </tuple>
      <tuple>
        <value>10.32</value>
        <value>1</value>
        <value>10.32</value>
      </tuple>
      <tuple>
        <value>10.37</value>
        <value>0</value>
        <value>10.37</value>
      </tuple>
      <tuple>
        <value>11.38</value>
        <value>%null%</value>
        <value>11.38</value>
      </tuple>
      <tuple>
        <value>12.05</value>
        <value>0</value>
        <value>12.05</value>
      </tuple>
      <tuple>
        <value>12.4</value>
        <value>1</value>
        <value>12.4</value>
      </tuple>
      <tuple>
        <value>16.42</value>
        <value>%null%</value>
        <value>16.42</value>
      </tuple>
      <tuple>
        <value>16.81</value>
        <value>%null%</value>
        <value>16.81</value>
      </tuple>
    </table>
  </test>
</results>
